# このワークフローは静的解析（Linter）、型チェック、セキュリティスキャンを実行します
# コメントは日本語で記載しています。
name: Python CI - Quality

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  quality:
    name: Lint, Typecheck and Security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dev dependencies
        # pre-commit と bandit を含めてインストールし、ローカルでの pre-commit と同等のチェックを実行できるようにします
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install pre-commit bandit

      - name: Run pre-commit hooks
        # pre-commit で定義された全てのフックを実行します（end-of-file-fixer, flake8-status, mypy-status など）
        run: |
          # Run all pre-commit hooks across repository (will fail the job on issues)
          pre-commit run --all-files

      - name: Run security scan (bandit)
        run: |
          # Run bandit separately because it is not part of pre-commit config
          bandit -r app -f json -o bandit.json

      - name: Upload bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit.json
